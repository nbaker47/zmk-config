// Copyright (c) 2022 The ZMK Contributors
// SPDX-License-Identifier: MIT

#define ZMK_MOUSE_DEFAULT_MOVE_VAL 1250
#define ZMK_MOUSE_DEFAULT_SCRL_VAL 70

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/outputs.h>
#include <dt-bindings/zmk/mouse.h>

#define MAC 0
#define WIN 1
#define RIG 2
#define LEF 3
#define TRI 4
#define MOUSE 5

/ {
    chosen { zmk,charmap = &charmap_us; };

    behaviors {
        ht: hold_tap {
            label = "hold_tap";
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            flavor = "tap-preferred";
            tapping-term-ms = <220>;
            quick-tap-ms = <150>;
            global-quick-tap;
            bindings = <&kp>, <&kp>;
        };

        mmv {
            acceleration-exponent = <1>;      // 1
            time-to-max-speed-ms = <800>;    // 40
            delay-ms = <0>;                   // 0
        };

        msc {
            acceleration-exponent = <1>;      // 0
            time-to-max-speed-ms = <500>;      // 500
            delay-ms = <0>;                   // 10
        };
    };

    conditional_layers { compatible = "zmk,conditional-layers"; };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
&kp Q    &kp W       &kp E        &kp R                    &kp T                   &kp Y           &kp U              &kp I        &kp O       &kp P
&lt 4 A  &ht LALT S  &ht LCTRL D  &ht LEFT_SHIFT F         &ht LEFT_GUI G          &ht LEFT_WIN H  &ht RIGHT_SHIFT J  &ht RCTRL K  &ht RALT L  &lt 1 SEMICOLON
&kp Z    &kp X       &kp C        &lt 5 V                  &kp B                   &kp N           &lt 3 M            &kp COMMA    &kp DOT     &kp SLASH
                                  &mt LEFT_CONTROL DELETE  &mt LSHIFT BACKSPACE    &lt 2 SPACE     &kp ENTER
            >;
        };

        nav {
            bindings = <
&none    &kp HOME        &kp UP_ARROW  &kp END        &none              &none           &none           &none             &none     &none
&kp TAB  &kp LEFT_ARROW  &kp DOWN      &kp RIGHT      &none              &none           &kp LEFT_SHIFT  &kp LEFT_CONTROL  &kp RALT  &none
&none    &kp PAGE_UP     &kp ESCAPE    &kp PAGE_DOWN  &none              &none           &none           &none             &none     &none
                                       &kp QUESTION   &kp EXCLAMATION    &kp UNDERSCORE  &kp MINUS
            >;
        };

        numbers {
            bindings = <
&kp F1        &kp F2        &kp F3        &kp F4            &kp F5            &kp F6        &kp F7    &kp F8        &kp F9  &kp F10
&kp NUMBER_1  &kp NUMBER_2  &kp NUMBER_3  &kp NUMBER_4      &kp NUMBER_5      &kp NUMBER_6  &kp N7    &kp NUMBER_8  &kp N9  &kp NUMBER_0
&none         &none         &none         &kp PERCENT       &kp ASTERISK      &kp EQUAL     &kp PLUS  &none         &none   &none
                                          &kp LEFT_CONTROL  &kp LEFT_SHIFT    &trans        &trans
            >;
        };

        func {
            bindings = <
&kp F1   &kp F2   &kp F3  &kp F4  &kp F5         &none  &none  &bt BT_SEL 0  &none  &studio_unlock
&kp F6   &kp F7   &kp F8  &kp F9  &kp F10        &none  &none  &bt BT_SEL 1  &none  &none
&kp F11  &kp F12  &none   &none   &bootloader    &none  &none  &bt BT_SEL 2  &none  &bootloader
                          &none   &none          &none  &none
            >;
        };

        symbols {
            bindings = <
&none   &kp CAPSLOCK      &kp PLUS        &kp SQT               &kp CARET    &kp ASTERISK          &kp DOUBLE_QUOTES      &kp AT_SIGN      &kp RIGHT_WIN      &kp PERCENT
&trans  &kp LEFT_BRACKET  &kp LEFT_BRACE  &kp LEFT_PARENTHESIS  &kp PIPE     &kp SLASH             &kp RIGHT_PARENTHESIS  &kp RIGHT_BRACE  &kp RIGHT_BRACKET  &kp COLON
&trans  &kp AMPERSAND     &kp GRAVE       &kp EXCLAMATION       &kp PLUS     &kp NON_US_BACKSLASH  &kp QUESTION           &kp TILDE        &kp DOLLAR         &kp HASH
                                          &none                 &none        &none                 &none
            >;
        };

        mouse {
            bindings = <
&none  &none  &none  &none     &none       &none     &none           &mmv MOVE_UP    &none            &none
&none  &none  &none  &none     &none       &none     &mmv MOVE_LEFT  &mmv MOVE_DOWN  &mmv MOVE_RIGHT  &none
&none  &none  &none  &none     &none       &none     &msc SCRL_UP    &msc SCRL_DOWN  &none            &none
                     &mkp MB2  &mkp MB1    &mkp MB3  &none
            >;
        };
    };
};
